{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Webmaverics\\\\login\\\\src\\\\Otpv.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import './Otpv.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import EmailIcon from '@mui/icons-material/Email';\n\n// const Emailv = () =>{\n//     return(\n//         <>\n//         <div className=\"container \">\n\n//             <div className=\"row justify-content-center\">\n//                 <div className=\"col-5 box\" style={{marginTop:\"150px\", padding:\"80px\"}}>\n//                         <h1 className=\"title\" >OTP Verification</h1>    \n//                         <button class=\"btn btn-secondary form-control button-cs\" type=\"button\">Sign up</button>\n//                 </div>\n//             </div>\n//         </div>\n\n//         </>\n//     )\n// }\n\n// export default Emailv;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OTPForm() {\n  _s();\n  const [otpCode, setOTPCode] = useState('');\n  const [timer, setTimer] = useState(60);\n  () => {\n    let intervalId;\n    if (timer > 0) {\n      intervalId = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [timer];\n  const handleOTPCodeChange = event => {\n    setOTPCode(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Call your verification function here with otpCode as the parameter\n    // If verification is successful, disable the input and button\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"otpCode\",\n      children: \"Enter OTP code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"otpCode\",\n      name: \"otpCode\",\n      value: otpCode,\n      onChange: handleOTPCodeChange,\n      disabled: timer === 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: otpCode.length !== 6 || timer === 0,\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time remaining: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(OTPForm, \"NsO1AojhhUztx615od6riQuwsrc=\");\n_c = OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OTPForm","_s","otpCode","setOTPCode","timer","setTimer","intervalId","setInterval","prevTimer","clearInterval","handleOTPCodeChange","event","target","value","handleSubmit","preventDefault","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onChange","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Webmaverics/login/src/Otpv.js"],"sourcesContent":["// import React from \"react\";\r\n// import './Otpv.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import EmailIcon from '@mui/icons-material/Email';\r\n\r\n// const Emailv = () =>{\r\n//     return(\r\n//         <>\r\n//         <div className=\"container \">\r\n            \r\n//             <div className=\"row justify-content-center\">\r\n//                 <div className=\"col-5 box\" style={{marginTop:\"150px\", padding:\"80px\"}}>\r\n//                         <h1 className=\"title\" >OTP Verification</h1>    \r\n//                         <button class=\"btn btn-secondary form-control button-cs\" type=\"button\">Sign up</button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n        \r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Emailv;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction OTPForm() {\r\n  const [otpCode, setOTPCode] = useState('');\r\n  const [timer, setTimer] = useState(60);\r\n\r\n    (() => {\r\n    let intervalId;\r\n    if (timer > 0) {\r\n      intervalId = setInterval(() => {\r\n        setTimer(prevTimer => prevTimer - 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(intervalId);\r\n  }, [timer]);\r\n\r\n  const handleOTPCodeChange = event => {\r\n    setOTPCode(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    // Call your verification function here with otpCode as the parameter\r\n    // If verification is successful, disable the input and button\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"otpCode\">Enter OTP code:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"otpCode\"\r\n        name=\"otpCode\"\r\n        value={otpCode}\r\n        onChange={handleOTPCodeChange}\r\n        disabled={timer === 0}\r\n      />\r\n      <button type=\"submit\" disabled={otpCode.length !== 6 || timer === 0}>\r\n        Verify OTP\r\n      </button>\r\n      <p>Time remaining: {timer} seconds</p>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAM;IACP,IAAIU,UAAU;IACd,IAAIF,KAAK,GAAG,CAAC,EAAE;MACbE,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC7BF,QAAQ,CAACG,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,KAAK,CAAC;EAEV,MAAMM,mBAAmB,GAAGC,KAAK,IAAI;IACnCR,UAAU,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAGH,KAAK,IAAI;IAC5BA,KAAK,CAACI,cAAc,EAAE;IACtB;IACA;EACF,CAAC;;EAED,oBACEhB,OAAA;IAAMiB,QAAQ,EAAEF,YAAa;IAAAG,QAAA,gBAC3BlB,OAAA;MAAOmB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAChDvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,SAAS;MACZC,IAAI,EAAC,SAAS;MACdZ,KAAK,EAAEX,OAAQ;MACfwB,QAAQ,EAAEhB,mBAAoB;MAC9BiB,QAAQ,EAAEvB,KAAK,KAAK;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB,eACFvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACI,QAAQ,EAAEzB,OAAO,CAAC0B,MAAM,KAAK,CAAC,IAAIxB,KAAK,KAAK,CAAE;MAAAa,QAAA,EAAC;IAErE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTvB,OAAA;MAAAkB,QAAA,GAAG,kBAAgB,EAACb,KAAK,EAAC,UAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjC;AAEX;AAACrB,EAAA,CAzCQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}